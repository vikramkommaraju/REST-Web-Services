To deploy the war, you need to make sure GlassFish server and Derby server BOTH are up and running.

To start GlassFish server, look at Caveats.txt of EJB
TO start derby, make sure derby is installed and then run startNetworkServer script
This will start a network server listening on port 1527

If you dont start derby, you will see error deploying the war to GlassFish

[vkommara::REST-Web-Services]>asadmin deploy target/rest-1.0.war 
remote failure: Error occurred during deployment: Exception while preparing the app : Exception [EclipseLink-4002] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.DatabaseException
Internal Exception: java.sql.SQLException: Error in allocating a connection. Cause: Connection could not be allocated because: java.net.ConnectException : Error connecting to server localhost on port 1527 with message Connection refused.
Error Code: 0. Please see server.log for more details.
Command deploy failed.

After derby is up

[vkommara::REST-Web-Services]>asadmin deploy target/rest-1.0.war 
Application deployed with name rest-1.0.
Command deploy executed successfully.
[vkommara::REST-Web-Services]>

After the war is deployed, you can either use a rest client like Jersey or you can use the cURL command line

TO create a book (This takes in the post payload in JSON format)

REQUEST

curl -X POST --data-binary "{\"description\":\"Science fiction comedy book\", \"illustrations\":false,\"isbn\":\"1-84023-742-2\",\"nbOfPage\":354,\"price\":12.5,\"title\":\"The Hitchhiker's Guide to the Galaxy\"}" -H "Content-Type: application/json " http://localhost:8080/rest-1.0/rs/book -v

RESPONSE

* Hostname was NOT found in DNS cache
*   Trying ::1...
* Connected to localhost (::1) port 8080 (#0)
> POST /rest-1.0/rs/book HTTP/1.1
> User-Agent: curl/7.37.1
> Host: localhost:8080
> Accept: */*
> Content-Type: application/json 
> Content-Length: 166
> 
* upload completely sent off: 166 out of 166 bytes
< HTTP/1.1 201 Created
* Server GlassFish Server Open Source Edition  4.1 is not blacklisted
< Server: GlassFish Server Open Source Edition  4.1 
< X-Powered-By: Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  4.1  Java/Oracle Corporation/1.8)
< Location: http://localhost:8080/rest-1.0/rs/book/1
< Date: Fri, 24 Jul 2015 06:25:06 GMT
< Content-Length: 0
< 
* Connection #0 to host localhost left intact

The verbose mode of cURL (the -v argument) displays the HTTP request and response (as shown in the following output). You can see in the response the URI of the created book resource with an ID set to 1:

URL for the application is "http://localhost:8080/rest-1.0/rs/". This is specified in ApplicationConfig class
@ApplicationPath("rs")
public class ApplicationConfig extends Application {



To get the book with Id 1,

REQUEST

curl -X GET -H "Accept: application/xml " http://localhost:8080/rest-1.0/rs/book/1

RESPONSE

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<book>
<description>Science fiction comedy book</description>
<id>1</id>
<illustrations>false</illustrations>
<isbn>1-84023-742-2</isbn>
<nbOfPage>354</nbOfPage>
<price>12.5</price>
<title>The Hitchhiker's Guide to the Galaxy</title>
</book>


Similarly,

GETTING ALL BOOKS

curl -X GET -H "Accept: application/xml" http://localhost:8080/rest-1.0/rs/book
